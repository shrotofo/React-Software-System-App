{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shrut\\\\Downloads\\\\updated-movie-box\\\\src\\\\components\\\\shows\\\\ShowGrid.jsx\",\n  _s = $RefreshSig$();\nimport React, { useReducer } from 'react';\nimport ShowCard from './ShowCard';\nimport { starredShowsReducer } from '../../lib/useStarredShows';\nimport FlexGrid from '../common/FlexGrid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShowGrid = _ref => {\n  _s();\n  let {\n    shows\n  } = _ref;\n  const [starredShows, dispatchStarred] = useReducer(starredShowsReducer, []);\n  const ids = localStorage.getItem('starredShowsids');\n  const onStarMeClick = showId => {\n    let arr = JSON.parse(ids) || [];\n    let newids = [...arr];\n    const isStarred = starredShows.includes(showId);\n    console.log(isStarred);\n    if (isStarred) {\n      dispatchStarred({\n        type: 'UNSTAR',\n        showId\n      });\n      newids.push(showId);\n      localStorage.setItem('starredShowsids', JSON.stringify(newids));\n    } else {\n      newids.push(showId);\n      dispatchStarred({\n        type: 'STAR',\n        showId\n      });\n      localStorage.setItem('starredShowsids', JSON.stringify(newids));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(FlexGrid, {\n    children: shows && shows.map(data => {\n      var _data$show, _data$show2, _data$show3, _data$show4, _data$show4$image, _data$show5, _data$show6, _data$show7;\n      return /*#__PURE__*/_jsxDEV(ShowCard, {\n        name: data === null || data === void 0 ? void 0 : (_data$show2 = data.show) === null || _data$show2 === void 0 ? void 0 : _data$show2.name,\n        image: data !== null && data !== void 0 && (_data$show3 = data.show) !== null && _data$show3 !== void 0 && _data$show3.image ? data === null || data === void 0 ? void 0 : (_data$show4 = data.show) === null || _data$show4 === void 0 ? void 0 : (_data$show4$image = _data$show4.image) === null || _data$show4$image === void 0 ? void 0 : _data$show4$image.medium : '/not-found-image.png',\n        summary: data === null || data === void 0 ? void 0 : (_data$show5 = data.show) === null || _data$show5 === void 0 ? void 0 : _data$show5.summary,\n        onStarMeClick: onStarMeClick,\n        isStarred: starredShows.includes(data === null || data === void 0 ? void 0 : (_data$show6 = data.show) === null || _data$show6 === void 0 ? void 0 : _data$show6.id),\n        id: data === null || data === void 0 ? void 0 : (_data$show7 = data.show) === null || _data$show7 === void 0 ? void 0 : _data$show7.id\n      }, data === null || data === void 0 ? void 0 : (_data$show = data.show) === null || _data$show === void 0 ? void 0 : _data$show.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(ShowGrid, \"LlQXIrZVbAp4cbB8JVKsdvXQv9A=\");\n_c = ShowGrid;\nexport default ShowGrid;\nvar _c;\n$RefreshReg$(_c, \"ShowGrid\");","map":{"version":3,"names":["React","useReducer","ShowCard","starredShowsReducer","FlexGrid","jsxDEV","_jsxDEV","ShowGrid","_ref","_s","shows","starredShows","dispatchStarred","ids","localStorage","getItem","onStarMeClick","showId","arr","JSON","parse","newids","isStarred","includes","console","log","type","push","setItem","stringify","children","map","data","_data$show","_data$show2","_data$show3","_data$show4","_data$show4$image","_data$show5","_data$show6","_data$show7","name","show","image","medium","summary","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/shrut/Downloads/updated-movie-box/src/components/shows/ShowGrid.jsx"],"sourcesContent":["import React, { useReducer } from 'react';\nimport ShowCard from './ShowCard';\nimport { starredShowsReducer } from '../../lib/useStarredShows';\nimport  FlexGrid from '../common/FlexGrid';\n\nconst ShowGrid = ({ shows }) => {\n  const [starredShows, dispatchStarred] = useReducer(starredShowsReducer, []);\n\n  const ids = localStorage.getItem('starredShowsids');\n\n  const onStarMeClick = showId => {\n    let arr = JSON.parse(ids) || [];\n    let newids = [...arr]\n\n    const isStarred = starredShows.includes(showId);\n    console.log(isStarred);\n    if (isStarred) {\n      dispatchStarred({ type: 'UNSTAR', showId });  \n      newids.push(showId)\n      localStorage.setItem('starredShowsids', JSON.stringify(newids));\n    } else {\n      newids.push(showId)\n      dispatchStarred({ type: 'STAR', showId });\n      localStorage.setItem('starredShowsids', JSON.stringify(newids));\n\n    }\n  };\n\n  return (\n    <FlexGrid>\n      {shows && shows.map(data => (\n        <ShowCard\n          key={data?.show?.id}\n          name={data?.show?.name}\n          image={data?.show?.image ? data?.show?.image?.medium : '/not-found-image.png'}\n          summary={data?.show?.summary}\n          onStarMeClick={onStarMeClick}\n          isStarred={starredShows.includes(data?.show?.id)}\n          id={data?.show?.id}\n        />\n      ))}\n    </FlexGrid>\n  );\n};\n\nexport default ShowGrid;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}