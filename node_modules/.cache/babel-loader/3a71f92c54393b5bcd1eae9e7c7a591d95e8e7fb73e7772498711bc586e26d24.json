{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shrut\\\\Downloads\\\\updated-movie-box\\\\src\\\\pages\\\\Starred.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { usePersistantReducer, starredShowsReducer } from '../lib/useStarredShows';\nimport { useQuery } from '@tanstack/react-query';\nimport { getShowByIds } from '../api/tvmaze';\nimport ShowGrid from '../components/shows/ShowGrid';\nimport { TextCenter } from '../components/common/TextCenter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Starred = () => {\n  _s();\n  const [starredShowsIds] = usePersistantReducer(starredShowsReducer, [], 'starredShows');\n  const ids = localStorage.getItem('starredShowsids');\n  const showIds = JSON.parse(ids) || [];\n  const {\n    data: starredShows,\n    error: starredShowsError,\n    isLoading\n  } = useQuery({\n    queryKey: ['starred', showIds],\n    queryFn: () => getShowByIds(showIds || []),\n    enabled: showIds.length > 0,\n    refetchOnWindowFocus: false\n  });\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Shows loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n  if (starredShowsError) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error occurred: \", starredShowsError.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n  if ((starredShows === null || starredShows === void 0 ? void 0 : starredShows.length) === 0) {\n    return /*#__PURE__*/_jsxDEV(TextCenter, {\n      children: \"No shows\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(ShowGrid, {\n    shows: starredShows\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 10\n  }, this);\n};\n_s(Starred, \"RzWciFJeRLj7NJiDc9NqBVjQK/Q=\", false, function () {\n  return [usePersistantReducer, useQuery];\n});\n_c = Starred;\nexport default Starred;\nvar _c;\n$RefreshReg$(_c, \"Starred\");","map":{"version":3,"names":["React","usePersistantReducer","starredShowsReducer","useQuery","getShowByIds","ShowGrid","TextCenter","jsxDEV","_jsxDEV","Starred","_s","starredShowsIds","ids","localStorage","getItem","showIds","JSON","parse","data","starredShows","error","starredShowsError","isLoading","queryKey","queryFn","enabled","length","refetchOnWindowFocus","children","fileName","_jsxFileName","lineNumber","columnNumber","message","shows","_c","$RefreshReg$"],"sources":["C:/Users/shrut/Downloads/updated-movie-box/src/pages/Starred.jsx"],"sourcesContent":["import React from 'react';\nimport { usePersistantReducer, starredShowsReducer } from '../lib/useStarredShows';\nimport { useQuery } from '@tanstack/react-query';\nimport { getShowByIds } from '../api/tvmaze';\nimport ShowGrid from '../components/shows/ShowGrid';\nimport { TextCenter } from '../components/common/TextCenter';\n\nconst Starred = () => {\n  const [starredShowsIds] = usePersistantReducer(starredShowsReducer, [], 'starredShows');\n\n  const ids = localStorage.getItem('starredShowsids');\n  const showIds = JSON.parse(ids) || [];\n  \n\n  const { data: starredShows, error: starredShowsError, isLoading } = useQuery({\n    queryKey: ['starred', showIds],\n    queryFn: () => getShowByIds(showIds || []),\n    enabled: showIds.length > 0,\n    refetchOnWindowFocus: false,\n  });\n\n  if (isLoading) {\n    return <div>Shows loading...</div>;\n  }\n\n  if (starredShowsError) {\n    return <div>Error occurred: {starredShowsError.message}</div>;\n  }\n\n  if (starredShows?.length === 0) {\n    return <TextCenter>No shows</TextCenter>;\n  }\n\n  return <ShowGrid shows={starredShows} />;\n};\n\nexport default Starred;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,oBAAoB,EAAEC,mBAAmB,QAAQ,wBAAwB;AAClF,SAASC,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,YAAY,QAAQ,eAAe;AAC5C,OAAOC,QAAQ,MAAM,8BAA8B;AACnD,SAASC,UAAU,QAAQ,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,eAAe,CAAC,GAAGV,oBAAoB,CAACC,mBAAmB,EAAE,EAAE,EAAE,cAAc,CAAC;EAEvF,MAAMU,GAAG,GAAGC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC;EACnD,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACL,GAAG,CAAC,IAAI,EAAE;EAGrC,MAAM;IAAEM,IAAI,EAAEC,YAAY;IAAEC,KAAK,EAAEC,iBAAiB;IAAEC;EAAU,CAAC,GAAGnB,QAAQ,CAAC;IAC3EoB,QAAQ,EAAE,CAAC,SAAS,EAAER,OAAO,CAAC;IAC9BS,OAAO,EAAEA,CAAA,KAAMpB,YAAY,CAACW,OAAO,IAAI,EAAE,CAAC;IAC1CU,OAAO,EAAEV,OAAO,CAACW,MAAM,GAAG,CAAC;IAC3BC,oBAAoB,EAAE;EACxB,CAAC,CAAC;EAEF,IAAIL,SAAS,EAAE;IACb,oBAAOd,OAAA;MAAAoB,QAAA,EAAK;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM;EACpC;EAEA,IAAIX,iBAAiB,EAAE;IACrB,oBAAOb,OAAA;MAAAoB,QAAA,GAAK,kBAAgB,EAACP,iBAAiB,CAACY,OAAO;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO;EAC/D;EAEA,IAAI,CAAAb,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEO,MAAM,MAAK,CAAC,EAAE;IAC9B,oBAAOlB,OAAA,CAACF,UAAU;MAAAsB,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAa;EAC1C;EAEA,oBAAOxB,OAAA,CAACH,QAAQ;IAAC6B,KAAK,EAAEf;EAAa;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AAC1C,CAAC;AAACtB,EAAA,CA3BID,OAAO;EAAA,QACeR,oBAAoB,EAMsBE,QAAQ;AAAA;AAAAgC,EAAA,GAPxE1B,OAAO;AA6Bb,eAAeA,OAAO;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}